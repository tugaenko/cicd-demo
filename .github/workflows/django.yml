name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Linters
      run: |
        flake8 . --ignore E501
    - name: Run Tests
      run: |
        python manage.py test

  build:
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY}}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
     - name: executing remote ssh commands using password
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         key: ${{ secrets.SSH_KEY }}
         script:
           cd demo/cicd
           export REGISTRY=${{ env.REGISTRY }}
           export IMAGE_NAME=${{ env.IMAGE_NAME}}

           echo "${{ github.token }}" | docker login --username ${{ github.actor }} --password-stdin

           docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
           sudo docker stop $(sudo docker ps -a -q)
           sudo docker run  -d -p 5000:5000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    #       docker-compose stop web
    #       docker-compose rm -f backend
    #       docker compose up -d
    
    #  - name: ls -a via ssh
    #    uses: fifsky/ssh-action@master
    #    with:
    #      command: |
    #        cd /tmp
    #        ls -a
    #      host: ${{ secrets.HOST }}
    #      user: ${{ secrets.USERNAME }}
    #      key: ${{ secrets.SSH_KEY}}
